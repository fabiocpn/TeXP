options(echo=TRUE)
args <- commandArgs(trailingOnly = TRUE)

#
signature_file = args[1]
TEMPLATEsub_counts_file = args[2]
total_reads_file = args[3]
factor_tpm_file = args[4]
#

A=read.table(signature_file,header=T,row.names=1);   
#A=A[complete.cases(A),,drop=FALSE]					#Clean elements that were not contemplated in the simulations
A=A[order(row.names(A)),,drop=FALSE]

B=read.table(TEMPLATEsub_counts_file,header=T,row.names=1);   #Number of reads at each subfamily
B=B[order(row.names(B)),,drop=FALSE]

B2=merge(B,A,by=0,all=TRUE)[,1:3];
B2=B2[complete.cases(B2),,drop=FALSE]	
B=B[B2$Row.names,,drop=FALSE]
A=A[B2$Row.names,,drop=FALSE]

A.scale=scale(A,center=FALSE);
A.scale[is.nan(A.scale)] = 0
n_col_sig = ncol(A); 
B.scale=scale(B,center=FALSE);
F = 1                 #Sum of percentages has to be equal to 1
G = diag(n_col_sig)   #
E = rep(1,n_col_sig)  #
H = rep(0,n_col_sig)  #
library(limSolve)
percentages = lsei(A.scale,B.scale,E,F,G,H)
B.corrected = B*percentages$X

##
## Quantify L1Hs transcription
##
tot = scan(total_reads_file)
factor_tpm = scan(factor_tpm_file)
length = 1000
reads = B
TEMPLATE_percent_signal = percentages$X[1:(length(percentages$X)-1)]
length_TEMPLATE = 0


TEMPLATE_reads = data.frame(x=numeric(dim(B)[1]-1));
corrected_TEMPLATE_reads = data.frame(x=numeric(dim(B)[1]-1));


count=0; 
for (i in rownames(A)) { 
	j=paste(sub("-",".",i),"_Transcript",sep=""); 
	if ( !is.na(B[i,]) &&  !is.null(A[i,j]) && !is.na(TEMPLATE_percent_signal[j]) ) {
		TEMPLATE_reads[count,] =  B[i,]
		rownames(TEMPLATE_reads)[count] = i
		corrected_TEMPLATE_reads[count,] = B[i,]*(1/A[i,j])*TEMPLATE_percent_signal[j]
		rownames(corrected_TEMPLATE_reads)[count] = i
		count=count+1;
	}
}
TEMPLATE_reads = TEMPLATE_reads[1:count-1,,drop=FALSE]
corrected_TEMPLATE_reads = corrected_TEMPLATE_reads[1:count-1,,drop=FALSE]

rpkm = data.frame((TEMPLATE_reads*10^9)/(length*tot))
colnames(rpkm)=c("RPKM")


rpkm.corrected = data.frame((corrected_TEMPLATE_reads*10^9)/(length*tot))
colnames(rpkm.corrected)=c("RPKM")

tpm = data.frame((TEMPLATE_reads/length)*(1/factor_tpm)*10^6)
colnames(tpm)=c("TPM")

tpm.corrected = data.frame((corrected_TEMPLATE_reads/length)*(1/factor_tpm)*10^6)
colnames(tpm.corrected)=c("TPM")

##
## Dump results into file
##
write.table(percentages$X,file=paste(TEMPLATEsub_counts_file,"signal_proportions",sep="."))

write.table(rpkm,file=paste(TEMPLATEsub_counts_file,"rpkm",sep="."),quote=F)
write.table(rpkm.corrected,file=paste(TEMPLATEsub_counts_file,"rpkm.corrected",sep="."),quote=F)
write.table(tpm,file=paste(TEMPLATEsub_counts_file,"tpm",sep="."),quote=F)
write.table(tpm.corrected,file=paste(TEMPLATEsub_counts_file,"tpm.corrected",sep="."),quote=F)

write.table(B.corrected,file=paste(TEMPLATEsub_counts_file,"corrected",sep="."))

